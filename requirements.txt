# YOLOv5 requirements
# Usage: pip install -r requirements.txt

# Base ----------------------------------------
matplotlib>=3.2.2
numpy>=1.18.5
opencv-python==4.5.5.64
Pillow>=7.1.2
PyYAML>=5.3.1
requests>=2.23.0
scipy>=1.4.1
torch>=1.7.0  # see https://pytorch.org/get-started/locally/ (recommended)
torchvision>=0.8.1
tqdm>=4.64.0
easyocr>=1.6.2
# protobuf<=3.20.1  # https://github.com/ultralytics/yolov5/issues/8012

# Logging -------------------------------------
tensorboard>=2.4.1
# wandb
# clearml

# Plotting ------------------------------------
pandas>=1.1.4
seaborn>=0.11.0

# Export --------------------------------------
coremltools>=6.0  # CoreML export
# onnx>=1.9.0  # ONNX export
# onnx-simplifier>=0.4.1  # ONNX simplifier
# nvidia-pyindex  # TensorRT export
# nvidia-tensorrt  # TensorRT export
# scikit-learn<=1.1.2  # CoreML quantization
# tensorflow>=2.4.1  # TF exports (-cpu, -aarch64, -macos)
# tensorflowjs>=3.9.0  # TF.js export
# openvino-dev  # OpenVINO export

# Deploy --------------------------------------
# tritonclient[all]~=2.24.0

# Extras --------------------------------------
ipython  # interactive notebook
psutil  # system utilization
thop>=0.1.1  # FLOPs computation
# mss  # screenshots
# albumentations>=1.0.3
# pycocotools>=2.0  # COCO mAP
# roboflow

# Code style
black>=22.3.0
flake8>=4.0.1
isort>=5.10.1
pytest>=7.1.2
flake8-bugbear>=22.3.23
flake8-comprehensions>=3.8.0
flake8-docstrings>=1.6.0
flake8-eradicate>=1.2.0
flake8-isort>=4.1.1
pep8-naming>=0.12.1
flake8-string-format>=0.3.0
flake8-bandit>=3.0.0
flake8-builtins>=1.5.3
flake8-black>=0.3.2
flake8-expression-complexity>=0.0.11
flake8-annotations-complexity>=0.0.7
flake8-requirements>=1.5.3
